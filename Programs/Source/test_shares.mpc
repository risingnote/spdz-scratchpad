"""
Test receiving and sending external client inputs with updated SPDZ instructions / SPDZ Proxy.
"""

from Compiler.types import sint, sfix, regint, cfix, cint, ClientMessageType
from Compiler.instructions import listen, acceptclientconnection
from Compiler.library import do_while, print_ln, Array

PORTNUM = 14000

def main():

    listen(PORTNUM)
    print_ln('Listening for client connections on base port %s', PORTNUM)

    client_socket_id = regint()
    acceptclientconnection(client_socket_id, PORTNUM)
    regint.read_client_public_key(client_socket_id)

    # input_list = sint.receive_from_client(1, client_socket_id, ClientMessageType.TripleShares)
    # def receive_from_client(cls, n, client_id, message_type=ClientMessageType.NoType, encrypt=True):
    # send shares of a triple to client

    triples = list(sint.get_random_triple())
    sint.write_shares_to_socket(client_socket_id, triples, ClientMessageType.TripleShares, True)

    received = cint.read_from_socket(client_socket_id, 1)
    y = [0]
    y[0] = received[0] - triples[0]
    print_ln('Client input: %s triple to deduct () result %s', received[0], y[0].reveal())            

main()
